---
- name: Register number of cpu
  shell: cat /proc/cpuinfo |grep CPU|wc -l
  register: numCPU
- name: Reset latest configuration on join masters with {{ container_runtime }} cri
  shell: kubeadm reset --force --cri-socket=/var/run/"{{ container_runtime }}"/"{{ container_runtime }}".sock
  tags: reset_master_after_first_init
- name: Join master nodes with 1 cpu
  shell: |
    kubeadm join "{{ control_plane_endpoint }}" --token "{{ hostvars['k8s_join']['token'] }}" \
    --discovery-token-ca-cert-hash sha256:"{{ hostvars['k8s_join']['hash'] }}" \
    --control-plane --certificate-key "{{ hostvars['k8s_join']['certificate'] }}" \
    --ignore-preflight-errors=NumCPU \
    --apiserver-advertise-address="{{ ansible_eth1.ipv4.address }}" \
    --cri-socket=/var/run/"{{ container_runtime }}"/"{{ container_runtime }}".sock
  when: numCPU.stdout == '1'
- name: Join master node
  shell: |
    kubeadm join "{{ control_plane_endpoint }}" --token "{{ hostvars['k8s_join']['token'] }}" \
    --discovery-token-ca-cert-hash sha256:"{{ hostvars['k8s_join']['hash'] }}" \
    --control-plane --certificate-key "{{ hostvars['k8s_join']['certificate'] }}" \
    --apiserver-advertise-address="{{ ansible_eth1.ipv4.address }}" \
    --cri-socket=/var/run/"{{ container_runtime }}"/"{{ container_runtime }}".sock
  when: numCPU.stdout > '1'